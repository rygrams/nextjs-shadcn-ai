{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "smartui-dialog",
  "type": "registry:component",
  "title": "Smart Dialog",
  "description": "A smart AI dialog for AI companion",
  "dependencies": [".."],
  "registryDependencies": ["dialog", "button"],
  "files": [
    {
      "path": "src/registry/new-york/blocks/smart-dialog.tsx",
      "content": "'use client'\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/registry/new-york/ui/dialog'\nimport { Button } from '@/registry/new-york/ui/button'\nimport { Icons } from '@/registry/new-york/blocks/smart-icons'\nimport React from 'react'\nimport { Textarea } from '@/registry/new-york/ui/textarea'\nimport {\n  ResultSelection,\n  TaskSelection,\n} from '@/registry/new-york/blocks/smart-selection'\nimport { useXtartapp } from '../lib/smartui-api.hook'\nimport { TaskEnpoints } from '../lib/smartui-api.utils'\n\nexport function DefaultTrigger() {\n  return (\n    <span className=\"flex items-center gap-1 text-xs text-purple-950 dark:text-purple-500\">\n      <Icons.Companion className=\"size-4 \" />\n      AI companion\n    </span>\n  )\n}\n\nexport type SmartDialog = React.ComponentProps<typeof Dialog> & {\n  trigger?: React.ReactNode\n  defaultValue?: string\n  context?: string\n  onSelect?: (value: string) => void\n}\n\nexport function SmartDialog({\n  trigger,\n  defaultValue,\n  onSelect,\n  context,\n}: SmartDialog) {\n  const [open, setOpen] = React.useState(false)\n  const [taskId, setTaskId] = React.useState<TaskEnpoints>('suggestions')\n  const [value, setValue] = React.useState(defaultValue)\n  const [title, _] = React.useState('AI Companion')\n  const { mutate, isLoading, data } = useXtartapp(taskId)\n\n  console.log('Task ID:', taskId, isLoading, data)\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button\n          variant={'ghost'}\n          className=\"cursor-pointer p-0 h-auto w-auto min-w-2\"\n        >\n          {trigger ?? <DefaultTrigger />}\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"w-full sm:max-w-xl\">\n        <DialogHeader>\n          <DialogTitle>\n            <span className=\"flex items-center gap-2\">\n              <Icons.Companion className=\"size-5 text-cyan-600\" />\n              <h6 className=\"text-base\">{title}</h6>\n            </span>\n          </DialogTitle>\n          <DialogDescription>\n            <span className=\"text-sm text-gray-800 dark:text-gray-300\">\n              Jumpstart collaboration with your AI companion.\n            </span>\n            <br />\n\n            <span className=\"text-xs text-muted-foreground\">\n              Ask questions, get suggestions, and receive feedback on your code.\n            </span>\n          </DialogDescription>\n        </DialogHeader>\n        <div>\n          <TaskSelection onSelectionChange={setTaskId} />\n          {/* <div className=\"flex justify-center items-center scale-50\">\n            <div className=\"relative w-24 h-24 animate-spin animate-zoom rounded-full bg-gradient-to-r from-purple-400 via-blue-500 to-red-400 \">\n              <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-20 h-20 bg-white dark:bg-black rounded-full\"></div>\n            </div>\n          </div>\n          <p className=\"text-sm text-gray-800 dark:text-gray-300 text-center\">\n            Please wait while we process your request...\n          </p> */}\n\n          {/* <div className=\"overflow-y-auto max-h-[40vh] scrollbar-thin scrollbar-thumb-gray-300 dark:scrollbar-thumb-gray-700 scrollbar-track-gray-100 dark:scrollbar-track-gray-800\">\n            <ResultSelection\n              onSelect={(value) => {\n                console.log('Selected value:', value)\n                setValue(value)\n              }}\n              results={[\n                'Adjusting font sizes for better readability',\n                'Adding responsive margin and padding',\n                'Implementing error handling for API calls',\n                'Optimizing component performance',\n              ]}\n            />\n          </div> */}\n\n          {/* <Textarea\n            placeholder=\"Type your content here.\"\n            defaultValue={defaultValue}\n            autoFocus\n            wrap=\"hard\"\n            rows={2}\n            className=\"mt-8 max-h-24\"\n          /> */}\n        </div>\n        <DialogFooter>\n          <Button\n            variant={'default'}\n            className=\"bg-green-600 hover:bg-green-700 cursor-pointer\"\n            onClick={() => {}}\n          >\n            Accept\n          </Button>\n          <Button\n            onClick={() => {\n              mutate({\n                context: 'description du monde',\n                input: 'le monde est beau',\n              })\n            }}\n            className=\"cursor-pointer\"\n            variant={'default'}\n          >\n            Submit\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nSmartDialog.displayName = 'SmartDialog'\n",
      "type": "registry:component"
    }
  ]
}
